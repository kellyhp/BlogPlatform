{{! Use the main layout }}
{{!< main }}

<div class="profile-container">
    <div class="profile-avatar">
        <!-- Display user's profile image -->
        <img class="profile-avatar" src="/avatar/{{user.username}}" alt="User Avatar">
    </div>
    
    <section class="profile-info">
        <!-- Display user profile information -->
        <h2>User Profile</h2>
        <p> <span class="bold "> Username: </span> {{user.username}}</p>
        <p> <span class="bold"> Member since: </span> {{user.memberSince}}</p>
        <!-- Add more profile information as needed -->
    </section>
</div>

<section class="user-posts">
    <!-- you can call posts tweets, or truths, or whatever, these are neologisms. Choose your own new in server.js -->
    <h2>Your {{{postNeoType}}}s</h2>
    
    <!-- you'll need to make this conditaionl and #each expression work -->
    {{#if user.posts.length}}
        <ul>
            {{#each user.posts}}
                <li class="post-profile">
                    <div class="post-avatar">
                        <img class="avatar" src="/avatar/{{this.username}}" alt="{{this.username}}'s Avatar">
                    </div>
                    <div class="post-content preserve-newlines">
                        <a  class="spanTitle" href="/post/{{this.id}}">{{this.title}}</a>
                        <p class="spanContent">{{this.content}}</p>
                        <div class="post-status-bar">
                            <i onclick="handleDeleteClick(event)" data-id="{{this.id}}" class="fa-solid fa-trash delete-button delete-button-profile"></i>
                            <p id="like-counter"> {{this.likes}} likes </p>
                            <p>Posted By: {{this.username}} on {{this.timestamp}}</p>
                        </div>
                    </div>
                </li>
            {{/each}}
        </ul>
    {{else}}
        <p class="not-posted">You have not posted yet.</p>
    {{/if}}
</section>

<script>
    async function handleDeleteClick(event) {
        const buttonElement = event.target.closest('.delete-button');
        const postId = buttonElement.getAttribute('data-id');

        try {
            let response = await fetch(`/delete/${postId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ postId: postId })
            });

            let data = await response.json();

            if (data.status === 'success') {
                window.location.reload();
            } else {
                console.error('Failed to delete post');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }
</script>
